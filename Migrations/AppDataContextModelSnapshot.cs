// <auto-generated />
using System;
using GerenciadorDeVendas.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GerenciadorDeVendas.Migrations
{
    [DbContext(typeof(AppDataContext))]
    partial class AppDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GerenciadorDeVendas.Models.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("CategoriaId");

                    b.ToTable("categoria");
                });

            modelBuilder.Entity("GerenciadorDeVendas.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(80)");

                    b.Property<int?>("Idade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<int>("QtdCompras")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(16)");

                    b.HasKey("ClienteId");

                    b.ToTable("cliente");
                });

            modelBuilder.Entity("GerenciadorDeVendas.Models.Endereco", b =>
                {
                    b.Property<int>("EnderecoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Complemento")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("DDD")
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("char(2)");

                    b.HasKey("EnderecoId");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("endereco");
                });

            modelBuilder.Entity("GerenciadorDeVendas.Models.FormasPagamento", b =>
                {
                    b.Property<int>("FormasPagamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("PermiteAcrescimo")
                        .HasColumnType("bit");

                    b.Property<bool>("PermiteDesconto")
                        .HasColumnType("bit");

                    b.Property<string>("TipoPagamento")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("FormasPagamentoId");

                    b.ToTable("formasPagamento");
                });

            modelBuilder.Entity("GerenciadorDeVendas.Models.ItensDaVenda", b =>
                {
                    b.Property<int>("VendaId")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<double>("QtdPorProduto")
                        .HasColumnType("float");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("money");

                    b.HasKey("VendaId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("itensDaVenda");
                });

            modelBuilder.Entity("GerenciadorDeVendas.Models.Produto", b =>
                {
                    b.Property<int>("ProdutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("CodBarras")
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<double>("Estoque")
                        .HasColumnType("float");

                    b.Property<string>("Marca")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("PrecoCusto")
                        .HasColumnType("money");

                    b.Property<decimal>("PrecoVenda")
                        .HasColumnType("money");

                    b.Property<DateTime>("UltimaAlteracao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("ProdutoId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("produtos");
                });

            modelBuilder.Entity("GerenciadorDeVendas.Models.Venda", b =>
                {
                    b.Property<int>("VendaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Acrescimo")
                        .HasColumnType("money");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<decimal>("Desconto")
                        .HasColumnType("money");

                    b.Property<int>("FormasPagamentoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoPagamento")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalGeral")
                        .HasColumnType("money");

                    b.Property<int>("VendedorId")
                        .HasColumnType("int");

                    b.HasKey("VendaId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("FormasPagamentoId");

                    b.HasIndex("VendedorId");

                    b.ToTable("vendas");
                });

            modelBuilder.Entity("GerenciadorDeVendas.Models.Vendedor", b =>
                {
                    b.Property<int>("VendedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<decimal>("Comissao")
                        .HasColumnType("money");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(80)");

                    b.Property<int?>("Idade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<int>("QtdVendas")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(16)");

                    b.HasKey("VendedorId");

                    b.ToTable("vendedor");
                });

            modelBuilder.Entity("GerenciadorDeVendas.Models.Endereco", b =>
                {
                    b.HasOne("GerenciadorDeVendas.Models.Cliente", "Cliente")
                        .WithOne("Endereco")
                        .HasForeignKey("GerenciadorDeVendas.Models.Endereco", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("GerenciadorDeVendas.Models.ItensDaVenda", b =>
                {
                    b.HasOne("GerenciadorDeVendas.Models.Produto", "Produtos")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GerenciadorDeVendas.Models.Venda", "Venda")
                        .WithMany("ItensDaVenda")
                        .HasForeignKey("VendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produtos");

                    b.Navigation("Venda");
                });

            modelBuilder.Entity("GerenciadorDeVendas.Models.Produto", b =>
                {
                    b.HasOne("GerenciadorDeVendas.Models.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaId");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("GerenciadorDeVendas.Models.Venda", b =>
                {
                    b.HasOne("GerenciadorDeVendas.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GerenciadorDeVendas.Models.FormasPagamento", "FormasPagamento")
                        .WithMany()
                        .HasForeignKey("FormasPagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GerenciadorDeVendas.Models.Vendedor", "Vendedor")
                        .WithMany()
                        .HasForeignKey("VendedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("FormasPagamento");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("GerenciadorDeVendas.Models.Categoria", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("GerenciadorDeVendas.Models.Cliente", b =>
                {
                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("GerenciadorDeVendas.Models.Venda", b =>
                {
                    b.Navigation("ItensDaVenda");
                });
#pragma warning restore 612, 618
        }
    }
}
